What is the output of the following JAVA program ?

Class Test { 
    public static void main(String[] args) { 
        Test obj = new Test(); 
        obj.start(); 
    } 
    void start() { 
        String stra = ”do”; 
            String strb = method(stra); 
        System.out.print(“: ”+stra + strb); 
    } 
    String method(String stra) { 
        stra = stra + ”good”; 
        System.out.print(stra); 
        return“ good”; 
    } 
} 
(A) dogood : dogoodgood
(B) dogood : gooddogood
(C) dogood : dodogood
(D) dogood : dogood


Answer: (D) 

class simple
{
public static void main(String[ ] args)
{
simple obj = new simple( );
obj.start( );
}
void start( )
{
long [ ] P= {3, 4, 5};
long [ ] Q= method (P);
System.out.print (P[0] + P[1] + P[2]+”:”);
System.out.print (Q[0] + Q[1] + Q[2]);
}
long [ ] method (long [ ] R)
{
R [1]=7;
return R;
}
} //end of class

(A) 12 : 15
(B) 15 : 12
(C) 12 : 12
(D) 15 : 15


Answer: (D) 


##check the output 

#include<stdio.h>
int main()
{
int i = 2, k = 3;
while (i <= 3)
{
    for (k = i; k < 3; k++)
    {
        k = i * k;
        printf(k);
    }
    ++i;
}
return 0;
}




#include<stdio.h>
int main(){
int a = 10; 
char b = 'x'; 

void *p = &a; 
p = &b; 
printf(p);
return 0;
}



unsigned long int fun(unsigned long int n) {
        unsigned long int i, j, sum = 0;
        for( i = n; i > 1; i = i/2) j++;
        for( ; j > 1; j = j/2) sum++;
        return sum;
}
The value returned when we call fun with the input 240 is
1)4
2)5
3)7
4)6
5)40


In C, parameters are always
A)Passed by value
B)Passed by reference
C)Non-pointer variables are passed by value and pointers are passed by reference
D)Passed by value result

Which of the following is true about return type of functions in C?
A)Functions can return any type
B)Functions can return any type except array and functions
C)Functions can return any type except array, functions and union
D)Functions can return any type except array, functions, function pointer and union

class intWrap {
   int x;
} 
public class Main { 
    public static void main(String[] args) {
       intWrap i = new intWrap();
       i.x = 10;
       intWrap j = new intWrap();
       j.x = 20;
       swap(i, j);
       System.out.println("i.x = " + i.x + ", j.x = " + j.x);
    } 
    public static void swap(intWrap i, intWrap j) {
       int temp = i.x;
       i.x = j.x;
       j.x = temp;
    }
}


A)i.x = 20, j.x = 10
B)i.x = 10, j.x = 20
C)i.x = 10, j.x = 10
D)i.x = 20, j.x = 20

*******************************************************

public interface Foo 
{ 
    int k = 4; /* Line 3 */
}
Which three piece of codes are equivalent to line 3?
1)final int k = 4;
2)public int k = 4;
3)static int k = 4;
4)abstract int k = 4;
5)volatile int k = 4;
6)protected int k = 4;
A.)1, 2 and 3
B.)2, 3 and 4
C.)3, 4 and 5
D.)4, 5 and 6

*******************************************************

1. 	
What will be the output of the program?

public class CommandArgsThree 
{
    public static void main(String [] args) 
    {
        String [][] argCopy = new String[2][2];
        int x;
        argCopy[0] = args;
        x = argCopy[0].length;
        for (int y = 0; y < x; y++) 
        {
            System.out.print(" " + argCopy[0][y]);
        }
    }
}
and the command-line invocation is

> java CommandArgsThree 1 2 3

A.	0 0
B.	1 2
C.	0 0 0
D.	1 2 3






